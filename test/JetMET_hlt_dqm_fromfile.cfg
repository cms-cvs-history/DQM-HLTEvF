# $Id: hlt_dqm_fromfile.cfg,v 1.3 2008/05/27 08:35:21 cammin Exp $ 
process DQM = {
    
    untracked PSet maxEvents = {untracked int32 input = 1000}

#    // SM Event Source
#     source = NewEventStreamFileReader {
#        untracked vstring fileNames = {
#        "/store/RelVal/2007/7/10/RelVal-QCD_Pt_800_1000-1184053150/0000/820F6026-2B2F-DC11-B2E1-000423D6A0BE.root"
#        }
#     }

 source = PoolSource {
      untracked vstring fileNames = {
        ### TTBAR RelVal 2.0.6
	"file:/uscmst1b_scratch/lpc1/3DayLifetime/cammin/files/RelVal206_TTBAR_044390E5-EF19-DD11-BD58-000423D98DC4.root"

	# ### JetET50 RelVal 2.0.7
	# '/store/mc/CSA08/JetET50/GEN-SIM-RECO/STARTUP_V2_v2/0048/00411AB4-F228-DD11-8544-001731AF677B.root',
	# '/store/mc/CSA08/JetET50/GEN-SIM-RECO/STARTUP_V2_v2/0048/00A878AD-F728-DD11-9E0C-003048767FAF.root',
	# '/store/mc/CSA08/JetET50/GEN-SIM-RECO/STARTUP_V2_v2/0048/00B732BF-F428-DD11-AB00-001A92811748.root',
	# '/store/mc/CSA08/JetET50/GEN-SIM-RECO/STARTUP_V2_v2/0048/00E762ED-F728-DD11-890E-001A92811728.root',
	# '/store/mc/CSA08/JetET50/GEN-SIM-RECO/STARTUP_V2_v2/0048/023732DE-F428-DD11-AAF8-0018F3D096EA.root',
	# '/store/mc/CSA08/JetET50/GEN-SIM-RECO/STARTUP_V2_v2/0048/02506BAC-E828-DD11-AF8A-001A9281174C.root'


 	
	}    
 }
           
# this is the best way to do it
#JoCa   include "DQM/HLTEvF/data/HLTMonitor.cff"    

# this is a less good way - you have to define your own path
   include "DQM/HLTEvF/data/HLTJetMETDQMSource.cfi"
   # for relval
   replace hltResults.triggerSummaryLabel = "hltTriggerSummaryAOD::HLT"
   replace hltResults.plotAll = false
   replace hltResults.filters = {
        ### define all the trigger paths to looks at. 
	### This is for JetMEt only. For now define only single jet
        ### and met trigger paths.

	### jet triggers
         {
	   string name = "hlt1jet30"
           uint32 type = 1
           untracked double ptMin = 0
           untracked double ptMax = 100
         },
         {
	   string name = "hlt1jet50"
           uint32 type = 1
           untracked double ptMin = 40
           untracked double ptMax = 140
         },
         {
	   string name = "hlt1jet80"
           uint32 type = 1
           untracked double ptMin = 60
           untracked double ptMax = 200
         },
         {
	   string name = "hlt1jet110"
           uint32 type = 1
           untracked double ptMin = 100
           untracked double ptMax = 300
         },
         {
	   string name = "hlt1jet180"
           uint32 type = 1
           untracked double ptMin = 150
           untracked double ptMax = 400
         },
	 {
	   string name = "hlt1jet250"
           uint32 type = 1
           untracked double ptMin = 240
           untracked double ptMax = 500
         },

	### MET triggers
         {
	   string name = "hlt1MET25"
           uint32 type = 1
           untracked double ptMin = 0
           untracked double ptMax = 100
         },
	 {
	   string name = "hlt1MET35"
           uint32 type = 1
           untracked double ptMin = 0
           untracked double ptMax = 100
         },
	 {
	   string name = "hlt1MET50"
           uint32 type = 1
           untracked double ptMin = 0
           untracked double ptMax = 150
         },
         {
	   string name = "hlt1MET65"
           uint32 type = 1
           untracked double ptMin = 0
           untracked double ptMax = 150
         },
	 {
	   string name = "hlt1MET75"
           uint32 type = 1
           untracked double ptMin = 0
           untracked double ptMax = 200
         }
       }


   path hlt4vector = {  hltResults }

    # output into logfiles (verbose)
    service = MessageLogger {
	untracked vstring destinations = { 
	    "detailedInfo" , "critical" , "cout"
	}
	untracked vstring debugModules = { "*" }
	untracked PSet critical     = { untracked string threshold = "ERROR" }
	untracked PSet detailedInfo = { untracked string threshold = "INFO" } 
	untracked PSet cout = {
	    untracked string threshold = "WARNING"
	    untracked bool noLineBreaks = true
	    untracked PSet WARNING = {untracked int32 limit = 0 }
	}
    }	

    #########################################################
    #### BEGIN DQM Environment        #######################
    #########################################################
    include "DQMServices/Core/data/DQM.cfg"
    replace DQMStore.verbose = 0
    # this turns off the collector since we are running from a file
    replace DQM.collectorHost = ""

    # use include file for dqmSaver and dqmEnv (unused)
    include "DQMServices/Components/data/DQMEnvironment.cfi"
    # I've found this to be most useful even for running from file...
       replace dqmSaver.convention = "Online"
       
       # optionally change fileSaving  conditions
       # replace dqmSaver.saveByLumiSection =  1
       # replace dqmSaver.saveByMinute      = -1
       # replace dqmSaver.saveByEvent       = -1
       replace dqmSaver.saveByRun         =  1
       # replace dqmSaver.forceRunNumber         =  666
       replace dqmSaver.saveAtJobEnd      = true
   
    #########################################################
    #### END ################################################
    #########################################################
    module dumpcont = EventContentAnalyzer{}      
    # path dump = {dumpcont}
### FIX YOUR  PATH TO INCLUDE dqmSaver
#    path p ={dqmSource & qTester & dqmClient & dqmSaver }
     endpath p ={ dqmSaver }

} 
