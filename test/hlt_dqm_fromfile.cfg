# $Id: hlt_dqm_fromfile.cfg,v 1.2 2008/05/26 16:06:13 wittich Exp $ 
process DQM={
    
    #untracked PSet maxEvents = {untracked int32 input = -1}
    untracked PSet maxEvents = {untracked int32 input = 100}

#    // SM Event Source
#     source = NewEventStreamFileReader {
#        untracked vstring fileNames = {
#        "/store/RelVal/2007/7/10/RelVal-QCD_Pt_800_1000-1184053150/0000/820F6026-2B2F-DC11-B2E1-000423D6A0BE.root"
#        }
#     }

source = PoolSource {
     untracked vstring fileNames = {"file:HLTFromDigiRaw.root"}    
}
replace PoolSource.fileNames = {
'/store/relvall/2008/5/4/RelVal-RelValTTbar-1209247429-IDEAL_V1-2nd/0000/044390E5-EF19-DD11-BD58-000423D98DC4.root',
}
           
# this is the best way to do it
   include "DQM/HLTEvF/data/HLTMonitor.cff"    

# this is a less good way - you have to define your own path
   include "DQM/HLTEvF/data/FourVectorHLT.cfi"
   # for relval
   replace hltResults.triggerSummaryLabel = "hltTriggerSummaryAOD::HLT"
   replace hltResults.plotAll = true
   path hlt4vector = {  hltResults }

    # output into logfiles (verbose)
    service = MessageLogger {
	untracked vstring destinations = { 
	    "detailedInfo" , "critical" , "cout"
	}
	untracked vstring debugModules = { "*" }
	untracked PSet critical     = { untracked string threshold = "ERROR" }
	untracked PSet detailedInfo = { untracked string threshold = "INFO" } 
	untracked PSet cout = {
	    untracked string threshold = "WARNING"
	    untracked bool noLineBreaks = true
	    untracked PSet WARNING = {untracked int32 limit = 0 }
	}
    }	

    #########################################################
    #### BEGIN DQM Environment        #######################
    #########################################################
    include "DQMServices/Core/data/DQM.cfg"
    replace DQMStore.verbose = 0
    # this turns off the collector since we are running from a file
    replace DQM.collectorHost = ""

    # use include file for dqmSaver and dqmEnv (unused)
    include "DQMServices/Components/data/DQMEnvironment.cfi"
    # I've found this to be most useful even for running from file...
       replace dqmSaver.convention = "Online"
       
       # optionally change fileSaving  conditions
       # replace dqmSaver.saveByLumiSection =  1
       # replace dqmSaver.saveByMinute      = -1
       # replace dqmSaver.saveByEvent       = -1
       replace dqmSaver.saveByRun         =  1
       # replace dqmSaver.forceRunNumber         =  666
       replace dqmSaver.saveAtJobEnd      = true
   
    #########################################################
    #### END ################################################
    #########################################################
    module dumpcont = EventContentAnalyzer{}      
    # path dump = {dumpcont}
### FIX YOUR  PATH TO INCLUDE dqmSaver
#    path p ={dqmSource & qTester & dqmClient & dqmSaver }
     endpath p ={ dqmSaver }

} 
